# Reference: <https://postmarketos.org/vendorkernel>
# Kernel config based on: arch/arm/configs/(CHANGEME!)

pkgname="linux-zte-blade-af3"
pkgver=3.10.17
pkgrel=0
pkgdesc="ZTE Blade AF3 kernel fork"
arch="armhf"
_carch="arm"
_flavor="zte-blade-af3"
url="https://kernel.org"
license="GPL-2.0-only"
options="!strip !check !tracedeps"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev devicepkg-dev dtbtool gcc6"

# Compiler: this kernel was only tested with GCC6. Feel free to make a merge
# request if you find out that it is booting working with newer GCCs as
# well. See <https://postmarketos.org/vendorkernel> for instructions.
if [ "${CC:0:5}" != "gcc6-" ]; then
	CC="gcc6-$CC"
	HOSTCC="gcc6-gcc"
	CROSS_COMPILE="gcc6-$CROSS_COMPILE"
fi

# Source
_repository="android_kernel_zte_P731A20"
_commit="a1b2e761517f0e2bed0dd5e1a94053d7c648614d"
_config="sp7731gea_fwvga-dt_defconfig"
source="
	$pkgname-$_commit.tar.gz::https://github.com/blade-af3/${_repository}/archive/${_commit}.tar.gz
	$_config
	compiler-gcc6.h
	00_return_address.patch
	fix_cross_compile.patch
"
builddir="$srcdir/${_repository}-${_commit}"

prepare() {
	default_prepare
	
	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$builddir/include/linux/"
	
	
	downstreamkernel_prepare "$srcdir" "$builddir" "$_config" "$_carch" "$HOSTCC"
}

build() {
	
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-postmarketOS" \
		CFLAGS_MODULE=-fno-pic

	# Generate master DTB (deviceinfo_bootimg_qcdt)
	dtbTool -s 2048 -p "scripts/dtc/" -o "arch/arm/boot/dt.img" "arch/arm/boot/"
}

package() {
	# kernel.release
	install -D "$builddir/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"

	# zImage (find the right one)
	cd "$builddir/arch/$_carch/boot"
	_target="$pkgdir/boot/vmlinuz-$_flavor"
	for _zimg in zImage-dtb Image.gz-dtb *zImage Image; do
		[ -e "$_zimg" ] || continue
		msg "zImage found: $_zimg"
		install -Dm644 "$_zimg" "$_target"
		break
	done
	if ! [ -e "$_target" ]; then
		error "Could not find zImage in $PWD!"
		return 1
	fi

	# Master DTB (deviceinfo_bootimg_qcdt)
	install -Dm644 "$builddir/arch/arm/boot/dt.img" \
		"$pkgdir/boot/dt.img"
}

sha512sums="e29e9b242c235fe48278643a5ee4bb487c6a7cab09b23a16f796b945371da5505cdd3791b322837d29df4a401a91373f0a65c01794ad4576b2ab925487cdc64d  linux-zte-blade-af3-a1b2e761517f0e2bed0dd5e1a94053d7c648614d.tar.gz
8af7cc739120fefe92aed60c6bfd343f858d0718b977c822b91b442061a72d1aa6eaa3715e43d1ab4d5d23310e9d2ccc7d9064e6b4d38f029c4fa321f6b65f23  sp7731gea_fwvga-dt_defconfig
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h
c40eaa11547f5bc2b1ff965506bdfe3015ff16e4b5ad9ccb3b8134ceafd1d32407c4ef2b213e02e036ce1e9bdcbfe768dff7d4b054bec77705a176c1f783b6f5  00_return_address.patch
2bedb0af8a23f5febc5f23a41c91174bffa5cb3b9af699fd61c86089a5bead77a08aca23daa62a3b7e93845e9cf86a1f5cc2a5fb4c4a56af09cf5befa2287d31  fix_cross_compile.patch"
