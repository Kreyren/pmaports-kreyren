From 911a3e52a4a4f726b9ad8920654499fd154a2770 Mon Sep 17 00:00:00 2001
From: Dylan Van Assche <me@dylanvanassche.be>
Date: Fri, 17 Jun 2022 15:59:22 +0200
Subject: [PATCH 1/3] Revert "ASoC: codecs: wcd934x: Use .prepare and .shutdown
 instead of .trigger"

This reverts commit 6b8fe9663ebf682c68fa9548f699672b4c88f89e.

This commit is a hack to make q6voice working, but breaks headphones and
earpiece on the WCD934x codec driver. Reverting it makes them working
again.

Signed-off-by: Dylan Van Assche <me@dylanvanassche.be>
---
 sound/soc/codecs/wcd934x.c | 41 +++++++++++++++++++-------------------
 1 file changed, 20 insertions(+), 21 deletions(-)

diff --git a/sound/soc/codecs/wcd934x.c b/sound/soc/codecs/wcd934x.c
index c07b89910066..f56907d0942d 100644
--- a/sound/soc/codecs/wcd934x.c
+++ b/sound/soc/codecs/wcd934x.c
@@ -1891,7 +1891,7 @@ static int wcd934x_hw_free(struct snd_pcm_substream *substream,
 	return 0;
 }
 
-static int wcd934x_prepare(struct snd_pcm_substream *substream,
+static int wcd934x_trigger(struct snd_pcm_substream *substream, int cmd,
 			   struct snd_soc_dai *dai)
 {
 	struct wcd_slim_codec_dai_data *dai_data;
@@ -1901,26 +1901,26 @@ static int wcd934x_prepare(struct snd_pcm_substream *substream,
 	wcd = snd_soc_component_get_drvdata(dai->component);
 
 	dai_data = &wcd->dai[dai->id];
-	cfg = &dai_data->sconfig;
-	
-	slim_stream_prepare(dai_data->sruntime, cfg);
-	slim_stream_enable(dai_data->sruntime);
 
-	return 0;
-}
-
-static void wcd934x_shutdown(struct snd_pcm_substream *substream,
-			   struct snd_soc_dai *dai)
-{
-	struct wcd_slim_codec_dai_data *dai_data;
-	struct wcd934x_codec *wcd;
-
-	wcd = snd_soc_component_get_drvdata(dai->component);
-
-	dai_data = &wcd->dai[dai->id];
+	switch (cmd) {
+	case SNDRV_PCM_TRIGGER_START:
+	case SNDRV_PCM_TRIGGER_RESUME:
+	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
+		cfg = &dai_data->sconfig;
+		slim_stream_prepare(dai_data->sruntime, cfg);
+		slim_stream_enable(dai_data->sruntime);
+		break;
+	case SNDRV_PCM_TRIGGER_STOP:
+	case SNDRV_PCM_TRIGGER_SUSPEND:
+	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
+		slim_stream_unprepare(dai_data->sruntime);
+		slim_stream_disable(dai_data->sruntime);
+		break;
+	default:
+		break;
+	}
 
-	slim_stream_unprepare(dai_data->sruntime);
-	slim_stream_disable(dai_data->sruntime);
+	return 0;
 }
 
 static int wcd934x_set_channel_map(struct snd_soc_dai *dai,
@@ -2008,10 +2008,9 @@ static int wcd934x_get_channel_map(struct snd_soc_dai *dai,
 }
 
 static const struct snd_soc_dai_ops wcd934x_dai_ops = {
-	.prepare = wcd934x_prepare,
-	.shutdown = wcd934x_shutdown,
 	.hw_params = wcd934x_hw_params,
 	.hw_free = wcd934x_hw_free,
+	.trigger = wcd934x_trigger,
 	.set_channel_map = wcd934x_set_channel_map,
 	.get_channel_map = wcd934x_get_channel_map,
 };
-- 
GitLab


From 19f1e97359338e5d7c30d544c12245650263c43d Mon Sep 17 00:00:00 2001
From: Dylan Van Assche <me@dylanvanassche.be>
Date: Sat, 18 Jun 2022 20:38:15 +0200
Subject: [PATCH 2/3] arch: arm64: qcom: sdm845-shift-axolotl: improve audio
 routing

Audio on the SHIFT6mq needs to handle 3 microphones (internal bottom,
internal back, and headset through jack) together with 3 speakers
(earpiece, main speaker, and headset through jack). This requires
multiple DAIs to route everything without conflicting with each other.

This patch enables multiple MultiMedias for allowing capture and
playback and routes them the WCD9340 codec properly so each microphone
and speaker output has it own DAI link.

Signed-off-by: Dylan Van Assche <me@dylanvanassche.be>
---
 .../boot/dts/qcom/sdm845-shift-axolotl.dts    | 94 ++++++++++++++++++-
 1 file changed, 89 insertions(+), 5 deletions(-)

diff --git a/arch/arm64/boot/dts/qcom/sdm845-shift-axolotl.dts b/arch/arm64/boot/dts/qcom/sdm845-shift-axolotl.dts
index f160c66906f7..29b3cb90b6b1 100644
--- a/arch/arm64/boot/dts/qcom/sdm845-shift-axolotl.dts
+++ b/arch/arm64/boot/dts/qcom/sdm845-shift-axolotl.dts
@@ -634,6 +634,18 @@ dai@1 {
 	dai@2 {
 		reg = <2>;
 	};
+
+	dai@3 {
+		reg = <3>;
+	};
+
+	dai@4 {
+		reg = <4>;
+	};
+
+	dai@5 {
+		reg = <5>;
+	};
 };
 
 /*
@@ -693,7 +705,13 @@ &sound {
 	audio-routing = "RX_BIAS", "MCLK",
 			"AMIC1", "MIC BIAS1",
 			"AMIC2", "MIC BIAS2",
-			"AMIC3", "MIC BIAS3";
+			"AMIC3", "MIC BIAS3",
+			"MM_DL1",  "MultiMedia1 Playback",
+			"MM_DL3",  "MultiMedia3 Playback",
+			"MM_DL5",  "MultiMedia5 Playback",
+			"MultiMedia2 Capture", "MM_UL2",
+			"MultiMedia4 Capture", "MM_UL4",
+			"MultiMedia6 Capture", "MM_UL6";
 
 	mm1-dai-link {
 		link-name = "MultiMedia1";
@@ -716,6 +734,27 @@ cpu {
 		};
 	};
 
+	mm4-dai-link {
+		link-name = "MultiMedia4";
+		cpu {
+			sound-dai = <&q6asmdai MSM_FRONTEND_DAI_MULTIMEDIA4>;
+		};
+	};
+
+	mm5-dai-link {
+		link-name = "MultiMedia5";
+		cpu {
+			sound-dai = <&q6asmdai MSM_FRONTEND_DAI_MULTIMEDIA5>;
+		};
+	};
+
+	mm6-dai-link {
+		link-name = "MultiMedia6";
+		cpu {
+			sound-dai = <&q6asmdai MSM_FRONTEND_DAI_MULTIMEDIA6>;
+		};
+	};
+
 	speaker-dai-link {
 		link-name = "Speaker Playback";
 		codec {
@@ -731,10 +770,25 @@ platform {
 		};
 	};
 
+	slimcap-wcd-dai-link {
+		link-name = "SLIM WCD Capture 1";
+		codec {
+			sound-dai = <&wcd9340 1>; /* AIF1_CAP */
+		};
+
+		cpu {
+			sound-dai = <&q6afedai SLIMBUS_1_TX>;
+		};
+
+		platform {
+			sound-dai = <&q6routing>;
+		};
+	};
+
 	slim-dai-link {
-		link-name = "SLIM Playback";
+		link-name = "SLIM WCD Playback 1";
 		codec {
-			sound-dai = <&wcd9340 0>;
+			sound-dai = <&wcd9340 0>; /* AIF1_PB */
 		};
 
 		cpu {
@@ -747,9 +801,9 @@ platform {
 	};
 
 	slimcap-dai-link {
-		link-name = "SLIM Capture";
+		link-name = "SLIM WCD Capture 2";
 		codec {
-			sound-dai = <&wcd9340 1>;
+			sound-dai = <&wcd9340 3>; /* AIF2_CAP */
 		};
 
 		cpu {
@@ -761,6 +815,36 @@ platform {
 		};
 	};
 
+	slim-wcd-dai-link {
+		link-name = "SLIM WCD Playback 2";
+		codec {
+			sound-dai = <&wcd9340 2>; /* AIF2_PB */
+		};
+
+		cpu {
+			sound-dai = <&q6afedai SLIMBUS_1_RX>;
+		};
+
+		platform {
+			sound-dai = <&q6routing>;
+		};
+	};
+
+	slimcap2-wcd-dai-link {
+		link-name = "SLIM WCD Capture 3";
+		codec {
+			sound-dai = <&wcd9340 5>; /* AIF3_CAP */
+		};
+
+		cpu {
+			sound-dai = <&q6afedai SLIMBUS_2_TX>;
+		};
+
+		platform {
+			sound-dai = <&q6routing>;
+		};
+	};
+
 	voicemmode1-dai-link {
 		link-name = "VoiceMMode1";
 		cpu {
-- 
GitLab


From 9f40791a4dca96283386b5c958b9c7b1e98cf46b Mon Sep 17 00:00:00 2001
From: Dylan Van Assche <me@dylanvanassche.be>
Date: Sat, 2 Jul 2022 11:00:41 +0200
Subject: [PATCH 3/3] sound: soc: codecs: wcd-mbhc-v2: expose ALSA control for
 jack

Jack detection is currently fully functional via the input
interface together with the multimedia buttons, but is not exposed
as an ALSA control. Therefore, ALSA clients such as PulseAudio
do not pick up the jack detection events as they only support
one of the possible interface (ALSA control or input interface,
but not both). Expose the jack events as a new ALSA control
as well to provide ALSA clients both interfaces.

Signed-off-by: Dylan Van Assche <me@dylanvanassche.be>
---
 sound/soc/codecs/wcd-mbhc-v2.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/sound/soc/codecs/wcd-mbhc-v2.c b/sound/soc/codecs/wcd-mbhc-v2.c
index c53c2ef33e1a..2f38d67875f5 100644
--- a/sound/soc/codecs/wcd-mbhc-v2.c
+++ b/sound/soc/codecs/wcd-mbhc-v2.c
@@ -725,6 +725,11 @@ static int wcd_mbhc_initialise(struct wcd_mbhc *mbhc)
 
 	mutex_lock(&mbhc->lock);
 
+	/* expose ALSA control for jack detection */
+	ret = snd_jack_add_new_kctl (mbhc->jack->jack, "Headset Jack", WCD_MBHC_JACK_MASK);
+	if (ret)
+		dev_warn(component->dev, "failed creating Headset Jack kctl with err: %d\n", ret);
+
 	/* enable HS detection */
 	if (mbhc->mbhc_cb->hph_pull_up_control_v2)
 		mbhc->mbhc_cb->hph_pull_up_control_v2(component,
-- 
GitLab

