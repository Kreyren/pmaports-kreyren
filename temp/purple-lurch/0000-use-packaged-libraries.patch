From: Evangelos Ribeiro Tzaras <devrtz-debian@fortysixandtwo.eu>
Subject: Switch to packaged libraries instead of using git submodules
--- a/Makefile
+++ b/Makefile
@@ -25,6 +25,15 @@
 PURPLE_DIR=$(shell $(PKG_CONFIG) --variable=plugindir purple)
 LIBPURPLE_LDFLAGS=$(shell $(PKG_CONFIG) --cflags purple) \
 		    -L$(PURPLE_DIR)
+
+LIBOMEMO_CFLAGS = $(shell $(PKG_CONFIG) --cflags libomemo)
+LIBOMEMO_LDFLAGS = $(shell $(PKG_CONFIG) --libs libomemo)
+
+LIBAXC_CFLAGS = $(shell $(PKG_CONFIG) --cflags libaxc)
+LIBAXC_LDFLAGS = $(shell $(PKG_CONFIG) --libs libaxc)
+
+LIBSIGNAL_PROTOCOL_CFLAGS = $(shell $(PKG_CONFIG) --cflags libsignal-protocol-c)
+LIBSIGNAL_PROTOCOL_LDFLAGS = $(shell $(PKG_CONFIG) --cflags libsignal-protocol-c)
 		    
 XML2_CFLAGS ?= $(shell $(XML2_CONFIG) --cflags)
 XML2_LDFLAGS ?= $(shell $(XML2_CONFIG) --libs)
@@ -33,14 +42,20 @@
 
 PKGCFG_C=$(GLIB_CFLAGS) \
 	 $(LIBPURPLE_CFLAGS) \
-	 $(XML2_CFLAGS)
+	 $(XML2_CFLAGS) \
+         $(LIBOMEMO_CFLAGS) \
+         $(LIBAXC_CFLAGS) \
+         $(LIBSIGNAL_PROTOCOL_CFLAGS)
 
 
 PKGCFG_L=$(shell $(PKG_CONFIG) --libs sqlite3 mxml) \
  	$(GLIB_LDFLAGS) \
 	 $(LIBPURPLE_LDFLAGS) \
 	 $(XML2_LDFLAGS) \
-	 $(LIBGCRYPT_LDFLAGS)
+	 $(LIBGCRYPT_LDFLAGS) \
+         $(LIBOMEMO_LDFLAGS) \
+         $(LIBAXC_LDFLAGS) \
+         $(LIBSIGNAL_PROTOCOL_LDFLAGS)
 
 ifneq ("$(wildcard /etc/redhat-release)","")
 	LJABBER= -lxmpp
@@ -52,7 +67,7 @@
 endif
 endif
 
-HEADERS=-I$(HDIR)/jabber -I$(LOMEMO_SRC) -I$(AXC_SRC) -I$(AX_DIR)/src
+HEADERS=-I$(HDIR)/jabber
 CFLAGS += -std=c11 -Wall -g -Wstrict-overflow $(PKGCFG_C) $(HEADERS)
 PLUGIN_CPPFLAGS=-DPURPLE_PLUGINS
 # -D_BSD_SOURCE can be removed once nobody uses glibc <= 2.18 any more
@@ -65,32 +80,17 @@
 PURPLE_HOME_PLUGIN_DIR=$(HOME)/.purple/plugins
 PURPLE_PLUGIN_DIR = $(shell $(PKG_CONFIG) --variable=plugindir purple)
 
-LDIR=./lib
 BDIR=./build
 SDIR=./src
 HDIR=./headers
 TDIR=./test
 
-LOMEMO_DIR=$(LDIR)/libomemo
-LOMEMO_SRC=$(LOMEMO_DIR)/src
-LOMEMO_BUILD=$(LOMEMO_DIR)/build
-LOMEMO_PATH=$(LOMEMO_BUILD)/libomemo-conversations.a
-
-AXC_DIR=$(LDIR)/axc
-AXC_SRC=$(AXC_DIR)/src
-AXC_BUILD=$(AXC_DIR)/build
-AXC_PATH=$(AXC_BUILD)/libaxc-nt.a
-
-AX_DIR=$(AXC_DIR)/lib/libsignal-protocol-c
-AX_PATH=$(AX_DIR)/build/src/libsignal-protocol-c.a
-
 SOURCES := $(wildcard $(SDIR)/*.c)
 OBJECTS := $(patsubst $(SDIR)/%.c, $(BDIR)/%.o, $(SOURCES))
 OBJECTS_W_COVERAGE := $(patsubst $(SDIR)/%.c, $(BDIR)/%_w_coverage.o, $(SOURCES))
 TEST_SOURCES := $(wildcard $(TDIR)/test_*.c)
 TEST_OBJECTS := $(patsubst $(TDIR)/test_%.c, $(BDIR)/test_%.o, $(TEST_SOURCES))
 TEST_TARGETS := $(patsubst $(TDIR)/test_%.c, $(BDIR)/test_%, $(TEST_SOURCES))
-VENDOR_LIBS=$(LOMEMO_PATH) $(AXC_PATH) $(AX_PATH)
 
 
 ### make rules
@@ -100,19 +100,6 @@
 $(BDIR):
 	$(MKDIR_P) build
 
-$(AX_PATH):
-	cd $(AX_DIR)/ && \
-	   $(MKDIR_P) build && \
-	   cd build && \
-	   $(CMAKE) $(CMAKE_FLAGS) .. \
-	   && $(MAKE)
-
-$(AXC_PATH):
-	$(MAKE) -C "$(AXC_DIR)" build/libaxc-nt.a
-
-$(LOMEMO_PATH):
-	$(MAKE) -C "$(LOMEMO_DIR)" build/libomemo-conversations.a
-
 $(BDIR)/%.o: $(SDIR)/%.c | $(BDIR)
 	$(CC) -fPIC $(CFLAGS) $(CPPFLAGS) $(PLUGIN_CPPFLAGS) -c $(SDIR)/$*.c -o $@
 
@@ -122,11 +109,11 @@
 $(BDIR)/test_%.o: $(TDIR)/test_%.c | $(BDIR)
 	$(CC) $(CFLAGS) -O0 -c $(TDIR)/test_$*.c -o $@
 
-$(BDIR)/lurch.so: $(OBJECTS) $(VENDOR_LIBS)
+$(BDIR)/lurch.so: $(OBJECTS)
 	$(CC) -fPIC -shared $(CFLAGS) $(CPPFLAGS) $(PLUGIN_CPPFLAGS) \
 		$^ \
 		-o $@ $(LDFLAGS)
-$(BDIR)/lurch.a: $(BDIR)/lurch.o $(VENDOR_LIBS)
+$(BDIR)/lurch.a: $(BDIR)/lurch.o
 	$(AR) rcs $@ $^
 
 install: $(BDIR)/lurch.so
@@ -152,7 +139,7 @@
 	mv $(TARBALL_FILE_NAME) $(TARBALL_DIR_NAME)/
 	mv $(TARBALL_DIR_NAME) $(BDIR)/
 
-$(BDIR)/test_lurch_util: $(OBJECTS_W_COVERAGE) $(VENDOR_LIBS) $(BDIR)/test_lurch_util.o
+$(BDIR)/test_lurch_util: $(OBJECTS_W_COVERAGE) $(BDIR)/test_lurch_util.o
 	$(CC) $(CFLAGS) $(CPPFLAGS) -O0 --coverage $^ $(PURPLE_DIR)/libjabber.so.0 -o $@ $(LDFLAGS_T) \
 	-Wl,--wrap=purple_user_dir \
 	-Wl,--wrap=purple_prefs_get_bool \
@@ -163,7 +150,7 @@
 	-Wl,--wrap=purple_base16_encode_chunked
 	bash -c "set -o pipefail; $@ 2>&1 | grep -Ev ".*CRITICAL.*" | tr -s '\n'" # filter annoying and irrelevant glib output
 
-$(BDIR)/test_lurch_api: $(OBJECTS_W_COVERAGE) $(VENDOR_LIBS) $(BDIR)/test_lurch_api.o
+$(BDIR)/test_lurch_api: $(OBJECTS_W_COVERAGE) $(BDIR)/test_lurch_api.o
 	$(CC) $(CFLAGS) $(CPPFLAGS) -O0 --coverage $^ $(PURPLE_DIR)/libjabber.so.0 -o $@ $(LDFLAGS_T) \
 	-Wl,--wrap=purple_account_get_username \
 	-Wl,--wrap=purple_account_get_connection \
@@ -186,7 +173,7 @@
 	-Wl,--wrap=lurch_util_fp_get_printable
 	bash -c "set -o pipefail; $@ 2>&1 | grep -Ev ".*CRITICAL.*" | tr -s '\n'" # filter annoying and irrelevant glib output
 
-test: $(OBJECTS_W_COVERAGE) $(VENDOR_LIBS) $(TEST_TARGETS)
+test: $(OBJECTS_W_COVERAGE) $(TEST_TARGETS)
 
 coverage: test
 	gcovr -r . --html --html-details -o build/coverage.html
@@ -195,9 +182,5 @@
 clean:
 	$(RM_RF) "$(BDIR)"
 
-clean-all: clean
-	$(MAKE) -C "$(LOMEMO_DIR)" clean
-	$(MAKE) -C "$(AXC_DIR)" clean-all
-
-.PHONY: clean clean-all install install-home tarball test coverage
+.PHONY: clean install install-home tarball test coverage
 
